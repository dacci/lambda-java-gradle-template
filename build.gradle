plugins {
  id 'java'
  id 'jacoco'
  id 'com.diffplug.spotless' version '6.11.0'
  id 'com.github.spotbugs' version '5.0.13'
}

sourceCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  implementation platform('software.amazon.awssdk:bom:2.18.2')
  implementation platform('org.apache.logging.log4j:log4j-bom:2.19.0')
  implementation platform('org.junit:junit-bom:5.9.1')
  implementation platform('org.mockito:mockito-bom:4.8.1')

  implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
  implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'

  implementation 'software.amazon.awssdk:sqs'

  implementation 'org.slf4j:slf4j-api:1.7.36'
  runtimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl'
  runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.5.1'

  compileOnly 'org.checkerframework:checker-qual:3.27.0'
  compileOnly 'com.github.spotbugs:spotbugs-annotations:4.7.3'
  compileOnly 'org.projectlombok:lombok:1.18.24'
  annotationProcessor 'org.projectlombok:lombok:1.18.24'

  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testImplementation 'org.junit.jupiter:junit-jupiter-params'
  testImplementation 'org.mockito:mockito-junit-jupiter'
  testImplementation 'org.assertj:assertj-core:3.23.1'
  testImplementation 'com.amazonaws:aws-lambda-java-tests:1.1.1'

  spotbugsPlugins 'com.mebigfatguy.sb-contrib:sb-contrib:7.4.7'
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

spotless {
  java {
    googleJavaFormat()
    importOrder 'java', 'javax', 'org', 'com', 'software', ''
  }
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport

  environment	= [
    QUEUE_URL: 'https://queue',
  ]
}

jacocoTestReport {
  dependsOn test
}

task lambdaArtifact(type: Zip) {
  from compileJava
  from processResources

  into('lib') {
    from configurations.runtimeClasspath
  }
}
assemble.dependsOn lambdaArtifact
